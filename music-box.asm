;Morris Blaustein
;ECE 425
;CSUN
;8/21/20
;FINAL PROJECT - MUSIC BOX
;This music box loops a song to the DAC on the NXP LPC2148
;The output is a sine wave at frequencies based on notes C4-B4
;Music note and length information is stored as double word arrays
;The tempo of the music box is 60 beats per minute. Note lengths can be one beat, two beats,
and four beats.
;Output can be observed in simulation by watching "AOUT" in the logic analyzer
DACR EQU
0xE006C000
PINSEL0 EQU 0xE002C000
AREA musicbox,CODE,READONLY
ENTRY
LDR r3,=0x00080000
LDR r2,=PINSEL0
STR r3,[r2]
LDR r1,=0x00001000
LDR r0,=DACR
STR r1,[r0]
;enable DACR
7li
have occured
ADR r10,note ADR r3,time MOV r12,#0 LDR r4,=0x80 ;128, sine wave counter
LDR r7,=sine ;access to sine wave table
CMP r12,#0 ;determine if enough wave cycles
LDREQ r9,[r10],#4
CMPEQ
at end
r9,#0xC
ADREQ r10,note
;access to note value and timing
;load next note
;check if at end of music
;reset note and time to beginning of data if
ADREQ r3,time
one second
BEQ li
CMP r12,#0
CMPEQ r9,#0xB
;check if note is B
LDREQ r11,=0x23 ;delay for updating each sample to DACR
LDREQ r5,=0x1F4 ;number of wave cycles of B frequency in
CMP r12,#0
CMPEQ r9,#0xA
;check if note is A#
LDREQ r11,=0x26
LDREQ r5,=0x1D5
8CMP r12,#0
CMPEQ r9,#0x9
;check if note is A
LDREQ r11,=0x28
LDREQ r5,=0x1BE
CMP r12,#0
CMPEQ r9,#0x8
;check if note is G#
LDREQ r11,=0x2B
LDREQ r5,=0x1A0
CMP r12,#0
CMPEQ r9,#0x7
;check if note is G
LDREQ r11,=0x2E
LDREQ r5,=0x186
CMP r12,#0
CMPEQ r9,#0x6
;check if note is F#
LDREQ r11,=0x31
LDREQ r5,=0x170
CMP r12,#0
CMPEQ r9,#0x5
;check if note is F
LDREQ r11,=0x34
LDREQ r5,=0x15B
CMP
r12,#0
9CMPEQ
r9,#0x4
;check if note is E
LDREQ r11,=0x37
LDREQ r5,=0x149
CMP r12,#0
CMPEQ r9,#0x3
;check if note is D#
LDREQ r11,=0x3A
LDREQ r5,=0x139
CMP r12,#0
CMPEQ r9,#0x2
;check if note is D
LDREQ r11,=0x3E
LDREQ r5,=0x125
CMP r12,#0
CMPEQ r9,#0x1
;check if note is C#
LDREQ r11,=0x42
LDREQ r5,=0x113
CMP r12,#0;
CMPEQ r9,#0x0
;check if note is C
LDREQ r11,=0x45
LDREQ r5,=0x10A
CMP
timing
r12,#0
LDREQ r2,[r3],#4
;if time to change notes, load next note
10length (1,2,4)
l
MULEQ r12,r5,r2 ;multiply frequency times note
SUB r12,r12,#1 ;decrement from wave cycle count
MOV r8,r11 LDR r5,[r7],#4 ;load next sine wave table sample
LSL r6,r5,#6 ;shift left 6 bits to format for DACR
STR r6,[r0] ;store value to DACR
SUB r4,r4,#1 ;decrement sine wave table counter
delay SUB
wave table
iteration
stop
r8,#1
;delaying according to frequency
CMP r8,#0 BNE delay CMP r4,#0 BNE l ;branch if not at end of sine
B li ;branch to process next wave
B
stop
; 128 sample sine wave table
sine
DCD
0x200,0x219,0x232,0x24b,0x263,0x27c,0x294,0x2ac
DCD 0x2c3,0x2da,0x2f1,0x306,0x31c,0x330,0x344,0x357
DCD 0x369,0x37a,0x38b,0x39a,0x3a9,0x3b6,0x3c3,0x3ce
DCD 0x3d8,0x3e1,0x3e9,0x3f0,0x3f5,0x3f9,0x3fd,0x3fe
DCD 0x3ff,0x3fe,0x3fd,0x3f9,0x3f5,0x3f0,0x3e9,0x3e1
11DCD 0x3d8,0x3ce,0x3c3,0x3b6,0x3a9,0x39a,0x38b,0x37a
DCD 0x369,0x357,0x344,0x330,0x31c,0x306,0x2f1,0x2da
DCD 0x2c3,0x2ac,0x294,0x27c,0x263,0x24b,0x232,0x219
DCD 0x200,0x1e6,0x1cd,0x1b4,0x19c,0x183,0x16b,0x153
DCD 0x13c,0x125,0x10e,0xf9,0xe3,0xcf,0xbb,0xa8
DCD 0x96,0x85,0x74,0x65,0x56,0x49,0x3c,0x31
DCD 0x27,0x1e,0x16,0xf,0xa,0x6,0x2,0x1
DCD 0x0,0x1,0x2,0x6,0xa,0xf,0x16,0x1e
DCD 0x27,0x31,0x3c,0x49,0x56,0x65,0x74,0x85
DCD 0x96,0xa8,0xbb,0xcf,0xe3,0xf9,0x10e,0x125
DCD 0x13c,0x153,0x16b,0x183,0x19c,0x1b4,0x1cd,0x1e6
;12 notes to be played by music box
;C=0 C#=1 D=2 D#=3 E=4 F=5 F#=6 G=7 G#=8 A=9 A#=0xA B = 0xB
note
DCD
0x0,0xB,0x1,0xA,0x4,0x5,0x6,0x7,0x8,0x9,0xA,0xB,0xC
;note lengths
;1=1 second(1 beat), 2=2 seconds (2 beats), 4=4 seconds (4 beats)
time
DCD
0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
END